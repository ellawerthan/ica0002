---
- name: Intall Bind9
  apt:
    name: 
      - bind9
      - python3-dnspython
    state: present
    force_apt_get: yes

- name: Copy tsig keys
  template:
    src: named.conf.keys
    dest: /etc/bind/named.conf.keys
    validate: named-checkconf %s
  notify: Restart bind
  
- name: Configure DNS forwarders, ACL, master zone
  template:
    src: named.conf.options
    dest: /etc/bind/named.conf.options
    validate: named-checkconf %s
  notify: Restart bind

- name: Configure zone config for primaries
  template:
    src: named.conf.local
    dest: /etc/bind/named.conf.local
    validate: named-checkconf %s
  notify: Restart bind
  when: inventory_hostname in groups['dns_primaries']

- name: Configure zone config for secondaries
  template:
    src: named.conf.local.secondary
    dest: /etc/bind/named.conf.local
    validate: named-checkconf %s
  notify: Restart bind
  when: inventory_hostname in groups['dns_secondaries']

- name: Configure master zone
  template: 
    src: db.hitec
    dest: /var/lib/bind/db.{{ company_name }}
    validate: named-checkzone {{ domain }} %s
  notify: Restart bind
  when: inventory_hostname in groups['dns_primaries']

- name: Update dns settings
  template:
    src: resolv.conf
    dest: /etc/resolv.conf
  notify:
    - Restart systemd-resolved

# - name: Add A record for the services' subdomains to the primary domain database
#  nsupdate:
#    key_algorithm: "hmac-sha256"
#    key_name: "nsupdate.key"
#    key_secret: "{{ update_key }}"
#    server: "{{ hostvars[groups['dns_masters'][0]]['ansible_default_ipv4']['address'] }}"
#    zone: "{{ domain }}."
#    record: "{{ item['subdomain'] }}.{{ domain }}."
#    value: "{{ item['ip'] }}"
#    type: "A"
#  loop: "{{ a_records }}"
#  when: inventory_hostname in groups['dns_masters']

#- name: Add CNAME record for service's subdomains to the primary domain database
#  nsupdate:
#    key_algorithm: "hmac-sha256"
#    key_name: "nsupdate.key"
#    key_secret: "{{ update_key }}"
#    server: "{{ hostvars[groups['dns_masters'][0]]['ansible_default_ipv4']['address'] }}"
#    zone: "{{ domain }}."
#    record: "{{ item['cname'] }}.{{ domain }}."
#    value: "{{ item['real'] }}.{{ domain }}."
#    type: "CNAME"
#  loop: "{{ dns_cnames }}"
#  when: inventory_hostname in groups['dns_masters']

- name: Execute handlers preemptively
  meta: flush_handlers

- name: Make sure bind9 is started
  service:
    name: bind9
    state: started
    enabled: yes
